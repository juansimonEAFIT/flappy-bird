class FlappyBird {
  /*
  Models the FlappyBird object and creates/updates the bird image.
  */

  field int y_offset;           // Y-coordinate on screen
  field int x_offset;           // X-coordinate on screen
  field int size_x;             // Width of bird image.
  field int size_y;             // Height of bird image.
  field Array bird_vector;      // Image coords for bird

  /*
  FlappyBird object constructor.

  @param int altitude Y coordinate to first show bird image.
  */
  constructor FlappyBird new(int altitude) {
    let y_offset = altitude;
    let x_offset = 160;
    let size_x = 16;
    let size_y = 11;  // Ajustado para el nuevo dibujo (11 filas)

    // Inicializar el vector del pájaro para el nuevo diseño
    let bird_vector = Array.new(11);
    let bird_vector[0] = 4032;
    let bird_vector[1] = 4408;
    let bird_vector[2] = 10500;
    let bird_vector[3] = 10510;
    let bird_vector[4] = 8721;
    let bird_vector[5] = 31777;
    let bird_vector[6] = -32239;
    let bird_vector[7] = -754;
    let bird_vector[8] = 16898;
    let bird_vector[9] = 15388;
    let bird_vector[10] = 1008;

    do draw();
    return this;
  }

  /*
  Move bird image coordinates up.
  */
  method void moveUp()
  {
    do erase();
    if (y_offset > 30) {
      let y_offset = y_offset - 30;
    } else {
      let y_offset = 0;
    }

    return;
  }

  /*
  Move bird image coordinates down.
  */
  method void moveDown()
  {
    do erase();
    if (y_offset < (255 - size_y - 5)) {
      let y_offset = y_offset + 5;
    } else {
      let y_offset = 255 - size_y;
    }

    return;
  }

  /*
  Erase bird image.
  */
  method void erase()
  {
    do Screen.setColor(false);
    do Screen.drawRectangle(x_offset, y_offset, x_offset + size_x, y_offset + size_y);

    return;
  }

  /*
  Draw bird.
  */
  method void draw() {
    var int memAddress; 
  let memAddress = (16384 + (y_offset * 32) + (x_offset/16));
  
  // Dibujar el pájaro directamente con valores constantes
  do Memory.poke(memAddress+0, 4032);
  do Memory.poke(memAddress+32, 4408);
  do Memory.poke(memAddress+64, 10500);
  do Memory.poke(memAddress+96, 10510);
  do Memory.poke(memAddress+128, 8721);
  do Memory.poke(memAddress+160, 31777);
  do Memory.poke(memAddress+192, -32239);
  do Memory.poke(memAddress+224, -754);
  do Memory.poke(memAddress+256, 16898);
  do Memory.poke(memAddress+288, 15388);
  do Memory.poke(memAddress+320, 1008);
  return;

  }

  /*
  Get image X-coordinate.
  */
  method int getXOffset()
  {
    return x_offset;
  }

  /*
  Get image Y-coordinate.
  */
  method int getYOffset()
  {
    return y_offset;
  }

  /*
  Get image width.
  */
  method int getSizeX()
  {
    return size_x;
  }

  /*
  Get image height.
  */
  method int getSizeY()
  {
    return size_y;
  }

  /*
  Dispose of Bird object.
  */
  method void dispose() {
     do Memory.deAlloc(this);
     return;
  }
}